---
title: Reporting MUD behavior to vendors
abbrev: MUD Reporter
docname: draft-lear-opsawg-mud-reporter-00
category: std

ipr: trust200902
keyword: Internet-Draft

stand_alone: yes
pi: [toc, sortrefs, symrefs]

author:
 -
    ins: E. Lear
    name: Eliot Lear
    org: Cisco Systems
    street: Richtistrasse 7
    code: CH-8304
    city: Wallisellen
    country: Switzerland
    phone: +41 44 878 9200
    email: lear@cisco.com
 -
    ins: M. Ranganathan
    name: Mudumbai Ranganathan
    org: NIST
    street:  100 Bureau Dr.
    city: Gaithersburg
    country:  U.S.A
    phone: +1 301 975 2857
    email: mranga@nist.gov

normative:
   RFC6991:
   RFC8520:
   RFC2119:
   RFC8174:

informative:
   RFC7489:

--- abstract

As with other technology, manufacturers would like to understand how
networks implementing MUD are treating devices that are providing MUD
URLs and MUD files.  This memo specifies an extension to MUD that
permits certain behaviors to be reported.


--- middle

Introduction
============

Manufacturer Usage Descriptions (MUD) {{RFC8520}} provides a means for
devices to identify what they are and what sort of network access they
need.  When a device with a MUD URL and a MUD file is fielded in
volume, manufacturers may be curious as to whether it is getting the
access it needs.  There a few several reasons why a device would not be
getting the access it needs.  Some examples include:

 * The MUD file permits access only to a controller but there is none.
 * The MUD file permits access only to same-manufacturer or model but
   there is none.
 * The MUD file permits access to a particular Internet service, but
   the name of that service has not been resolved (or name resolution 
   failed).
 * The administrator overrode the recommendations in the MUD file.

This memo sets out to provide manufacturers indications regarding what
has happened, in a similar vein to how DMARC is usd to report message
drops to messag senders {{RFC7489}}.

In order to provide meaningful reporting, it is necessary to indicate
whether or not the above abstractions are in use at a given time, and
any public IP addresses that have been mapped to domain names by the
local deployment.  A communication method that may establish the
source of the reporter is also necessary, as well as the MUD URL in
use at the time of the report.

This memo specifies a YANG model for reporting and a means for
transmitting the report, and appropriate extensions to the MUD file to
indicate how to report and how often.

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCP 14 {{RFC2119}} {{RFC8174}} when, and only when, they
appear in all capitals, as shown here.

The mud-reporter-extension model extension
===========================

We now formally define this extension.  This is done in two parts.
First, the extension name "reporter" is listed in the
"extensions" array of the MUD file.

Second, the "mud" container is augmented with a container that 
points to where to report. 

The frequency of reporting is impelementation dependent. Impelemntations
are encouraged to report when ever packet drops are noticed at the enforcement 
point; however, this is not a strict requirement.

This is done as follows:

~~~~~~~~~

module: ietf-mud-controller-candidate
  augment /mud:mud:
      +--rw reporter
          +--rw report-uri    inet:uri

~~~~~~~~~

Finally the logging format is defined as follows:

~~~~~~~~~

module: ietf-mud-reporter
  +--rw mud-reporter
     +--rw mudurl?       inet:uri
     +--rw mud-report* [time]
        +--rw enforcement-point-id?   string
        +--rw time                    yang:timestamp
        +--rw mycontrollers?          uint32
        +--rw controllers* [uri]
        |  +--rw uri      inet:uri
        |  +--rw count?   uint32
        +--rw samemanufacturers?      uint32
        +--rw models* [uri]
        |  +--rw uri      inet:uri
        |  +--rw count?   uint32
        +--rw manufacturers* [authority]
        |  +--rw authority    string
        |  +--rw count?       uint32
        +--rw domains* [hostname]
        |  +--rw hostname        string
        |  +--rw ip-addresses*   inet:ip-address
        +--rw opaque-identifier*      string
        +--rw drop-counts* []
        |  +--rw (drop-reason)?
        |  |  +--:(nomatch)
        |  |  +--:(tcp-blocked)
        |  |     +--rw ace-name?   string
        |  +--rw direction?        enumeration
        |  +--rw drop-count?       uint64
        +--rw match-counts* []
           +--rw ace-name?       string
           +--rw packet-count?   uint64

~~~~~~~~~


The mud-reporter-extension augmentation to the MUD YANG model
----------------------

~~~~~~~~~

<CODE BEGINS>file "ietf-mud-reporter-extension@2019-06-21.yang"
module ietf-mud-reporter-extension {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-mud-reporter-extension";
  prefix mud-reporter-extension;

  import ietf-mud {
    prefix "mud";
  }

  import ietf-inet-types {
    prefix "inet";
  }

  organization
    "IETF OPSAWG (Ops Area) Working Group";
  contact
    "WG Web: http://tools.ietf.org/wg/opsawg/
     WG List: opsawg@ietf.org
     Author: Eliot Lear
     lear@cisco.com
     Author: Mudumbai Ranganathan
     mranga@nist.gov
    ";
  description

    "This YANG module augments the ietf-mud model to provide for two
     optional lists to indicate that this device type may be used as
     a controller for other MUD-enabled devices.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Simplified BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
       (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
      for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.
";

  revision 2019-06-21 {
    description
      "Initial proposed standard.";
    reference "RFC XXXX: Extension for MUD Reporting";
  }

  grouping mud-reporter-extension {
      description
         "Reporter information  grouping";
      container reporter {
        description "Reporter information";
        leaf report-uri {
          type inet:uri;
          description
             "Restful endpoint for reporter information.";
          }
      }
  }

  augment "/mud:mud" {
    uses mud-reporter-extension;
    description
      "add reporter extension";
  }
}
<CODE ENDS>

~~~~~~~~~



The Reporter record format
--------------------------

~~~~~~~~~

<CODE BEGINS>file "ietf-mud-reporter@2019-06-21.yang"


module ietf-mud-reporter {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-mud-reporter";
  prefix mud-reporter;

  import ietf-inet-types {
    prefix inet;
  }
  import ietf-yang-types {
    prefix yang;
  }

  organization
    "IETF OPSAWG (Ops Area) Working Group";
  contact
    "WG Web: http://tools.ietf.org/wg/opsawg/
     WG List: opsawg@ietf.org
     Author: Eliot Lear
     lear@cisco.com
    ";
  description

    "This YANG module specifies the reporting format for MUD managers
     to use when they are reporting to manufacturers.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to

     the license terms contained in, the Simplified BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
       (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
      for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.
    ";

  revision 2019-06-21 {
    description
      "Initial proposed standard.";
    reference
      "RFC XXXX: Extension for MUD Reporting";
  }

  container mud-reporter {
    uses mud-reporter-grouping;
    description "Reporter Information.";
  }

  grouping mud-reporter-grouping   {

    description
      "MUD reporter container.";
    leaf mudurl {
      type inet:uri;
      description
        "The MUD-URL for which the report is being sent.";
    }
    list mud-report {
      key "time";
      description
        "individual records.";

      leaf enforcement-point-id {
        type string;
        description
           "Identifying information for the enforcement-point
            (e.g. switch) that is making this report. This is
            an opaque identifier. ";

      }

      leaf time {
        type yang:timestamp;
        description
          "when this happened.";
      }


      leaf mycontrollers {
        type uint32;
        description
          "how many entries for my-controller.";
      }

      list controllers {
        key "uri";
        description
          "list of controllers and how many there were.";
        leaf uri {
          type inet:uri;
          description
            "the class URI of this controller";

        }
        leaf count {
          type uint32;
          description
            "number of devices serving this class.";
        }
      }

      leaf samemanufacturers {
        type uint32;
        description
          "number of devices matching same
           manufacturer.";
      }



      list models {
        key "uri";

        description
          "List of models and how many there were.";
        leaf uri {
          type inet:uri;

          description
            "the URI of this model";
        }
        leaf count {
          type uint32;
          description
            "number of devices serving this class.";

        }
      }

      list manufacturers {
        key "authority";

        description
          "List of models and how many there were.";
        leaf authority {
          type string;
          description
            "the URI of this model";

        }
        leaf count {
          type uint32;
          description
            "number of devices serving this class.";

        }
      }

      list domains {
        key "hostname";
        description
          "list of hosts, and ip addresses if known.";

        leaf hostname {
          type string;
          description
            "the host listed";
        }

        leaf-list ip-addresses {
          type inet:ip-address;
          description
            "ipv4 or v6 address mapping for this host if
             known.";
        }
      }

      leaf-list opaque-identifier {
          type string;
          description
            "List of opaque identifiers
             for the devices generating this report. ";

      }

      list drop-counts {
         description
            "List of packet counts for dropped packets 
             and the reason why they were dropped";
         uses drop-count;
      }

      list match-counts {
         description
            "List of packet counts for packets that were 
             not dropped.";
        uses pass-count;
      }
    }

  }


  grouping pass-count {
    description
     "Count of packets for each passing MUD ACE. in the MUD file.
      The ACE's are named with the <name of the ACL> / <name of ACE>";
    leaf ace-name {
      type string;
      description
             "Name of ACE";
    }

    leaf packet-count {
      type uint64;
      description
       "Pass count (count of number of packets that matched
        this ACE and made it through";
    }
  }

  grouping drop-count {
    description
      "Violating packet related to this MUD file are classfied.";
    leaf reason {
        description 
           "Reason code - tells the packets were dropped";
        type enumeration {
            enum nomatch {
               description 
               "No matching mud rule was found";
            }
            enum connection-block {
                  description 
                  "Connection was blocked";
           }
       }
    }

    choice drop-reason {
      description
        "Deatiled reasons for packet being dropped";
      case nomatch {
          description
           "No mud rule matched.";
      }
      case tcp-blocked {
        leaf ace-name {
          type string;
          description
            "ACE name for the MUD ACE that specified the 
            direction of initiation. TCP connection initiated 
            in the wrong direction.";
          }
       }
     }

     leaf direction {
        type enumeration {
          enum to-device {
            description
              "Packet was traveling toward the device";
          }
          enum from-device {
            description
              "Packet was traveling away from the device";
          }
        }
        description
          "which way packet is going";
     }

    leaf drop-count {
      type uint64;
      description
        "Measure of dropped packets for this classification.";
    }
  }
}

<CODE ENDS>

~~~~~~~~~

RESTful interface at the collector
==================================

~~~~~~~~~

<CODE BEGINS>file "ietf-mud-reporter-collector@2019-06-21.yang"
module ietf-mud-reporter-collector {
   yang-version 1.1;
   namespace "urn:ietf:params:xml:ns:yang:ietf-mud-reporter-collector";
   prefix "mud-collector";
   
   import ietf-mud-reporter {
        prefix "reporter";
    }
  organization
    "IETF OPSAWG (Ops Area) Working Group";
  contact
    "WG Web: http://tools.ietf.org/wg/opsawg/
     WG List: opsawg@ietf.org
     Author: Eliot Lear
     lear@cisco.com
     Author: Mudumbai Ranganathan
     mranga@nist.gov
    ";
  description
    "This YANG module specifies the reporting format for MUD managers
     to use when they are reporting to manufacturers.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Simplified BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
       (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
      for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.
    ";
  revision 2019-06-21 {
    description
      "Initial proposed standard.";
    reference
      "RFC XXXX: Extension for MUD Reporting";
  }
    rpc post-mud-report {
      description
         "Rpc interface that must be supported by collection point.";
      input {
        container mud-report {
	  uses  reporter:mud-reporter-grouping;
	  description "MUD report";
        }
      }
    }
}

<CODE ENDS>

~~~~~~~~~


Examples
========

##Example 1##

Consider a MUD File, with the following allowable interactions:

Device may communicate with other hosts on the local network initiating outbound connections to port 800.
Device may field inbound TCP connections on port 8000.

There is a single device on the network. The MUD file is shown below.


~~~~~~~~~

{
  "ietf-mud:mud": {
    "mud-version": 1,
    "mud-url": "https://thingy.company.com/super1",
    "last-update": "2018-07-09T04:29:05+02:00",
    "cache-validity": 48,
    "is-supported": true,
    "systeminfo": "The NIST toaster",
    "from-device-policy": {
      "access-lists": {
        "access-list": [
          {
            "name": "mud-53094-v4fr"
          }
        ]
      }
    },
    "to-device-policy": {
      "access-lists": {
        "access-list": [
          {
            "name": "mud-53094-v4to"
          }
        ]
      }
    },
    "ietf-mud-reporter-extension:reporter" :{
          "report-uri" : "http://thingy.company.com/mud-reports"
    }
  },
  "ietf-access-control-list:acls": {
    "acl": [
      {
        "name": "mud-53094-v4to",
        "type": "ipv4-acl-type",
        "aces": {
          "ace": [
            {
              "name": "loc0-todev",
              "matches": {
                "ietf-mud:mud": {
                  "local-networks": [
                    null
                  ]
                },
                "ipv4": {
                  "protocol": 6
                },
                "tcp": {
                  "ietf-mud:direction-initiated": "from-device",
                  "source-port": {
                    "operator": "eq",
                    "port": 800
                  }
                }
              },
              "actions": {
                "forwarding": "accept"
              }
            },
            {
              "name": "loc1-todev",
              "matches": {
                "ietf-mud:mud": {
                  "local-networks": [
                    null
                  ]
                },
                "ipv4": {
                  "protocol": 6
                },
                "tcp": {
                  "ietf-mud:direction-initiated": "to-device",
                  "destination-port": {
                    "operator": "eq",
                    "port": 8000
                  }
                }
              },
              "actions": {
                "forwarding": "accept"
              }
            }
          ]
        }
      },
      {
        "name": "mud-53094-v4fr",
        "type": "ipv4-acl-type",
        "aces": {
          "ace": [
            {
              "name": "loc0-frdev",
              "matches": {
                "ietf-mud:mud": {
                  "local-networks": [
                    null
                  ]
                },
                "ipv4": {
                  "protocol": 6
                },
                "tcp": {
                  "ietf-mud:direction-initiated": "from-device",
                  "destination-port": {
                    "operator": "eq",
                    "port": 800
                  }
                }
              },
              "actions": {
                "forwarding": "accept"
              }
            },
            {
              "name": "loc1-frdev",
              "matches": {
                "ietf-mud:mud": {
                  "local-networks": [
                    null
                  ]
                },
                "ipv4": {
                  "protocol": 6
                },
                "tcp": {
                  "ietf-mud:direction-initiated": "to-device",
                  "source-port": {
                    "operator": "eq",
                    "port": 8000
                  }
                }
              },
              "actions": {
                "forwarding": "accept"
              }
            }
          ]
        }
      }
    ]
  }
}

~~~~~~~~~

### Case 1: The Device is operating correctly ### 

The MUD reporter will generate and send reports that look as follows:

~~~~~~~~~

{
    "ietf-mud-reporter:mud-reporter": {
        "mudurl": "https://thingy.company.com/super1",
        "mud-report": [
            {
                "time": 26098746,
                "drop-counts": [
                    {
                        "ace-name": "mud-53094-v4fr/loc1-frdev",
                        "reason": "connection-block",
                        "direction": "to-device",
                        "drop-count": 0
                    },
                    {
                        "ace-name": "mud-53094-v4to/loc0-todev",
                        "reason": "connection-block",
                        "direction": "from-device",
                        "drop-count": 0
                    },
                    {
                        "reason": "nomatch",
                        "direction": "to-device",
                        "drop-count": 0
                    },
                    {
                        "reason": "nomatch",
                        "direction": "from-device",
                        "drop-count": 0
                    }
                ],
                "match-counts": [
                    {
                        "packet-count": 13,
                        "ace-name": "mud-53094-v4to/loc0-todev"
                    },
                    {
                        "packet-count": 14,
                        "ace-name": "mud-53094-v4fr/loc0-frdev"
                    },
                    {
                        "packet-count": 14,
                        "ace-name": "mud-53094-v4to/loc1-todev"
                    },
                    {
                        "packet-count": 13,
                        "ace-name": "mud-53094-v4fr/loc1-frdev"
                    }
                ],
                "opaque-identifier": [
                    "6f6719b593a7136cfa7826400ab962f1"
                ],
                "enforcement-point-id": "openflow:1",
                "controllers": [
                    {
                        "uri": "urn:ietf:params:mud:dns",
                        "count": 1
                    },
                    {
                        "uri": "urn:ietf:params:mud:ntp",
                        "count": 1
                    }
                ]
            }
        ]
    }
}


~~~~~~~~~

### Case 2: The Device is generating illegal connection attempts. ###  

The MUD reporter will generate and send reports that look as follows:

~~~~~~~~~

{
    "ietf-mud-reporter:mud-reporter": {
        "mudurl": "https://thingy.company.com/super1",
        "mud-report": [
            {
                "time": 26098746,
                "drop-counts": [
                    {
                        "ace-name": "mud-53094-v4fr/loc1-frdev",
                        "reason": "connection-block",
                        "direction": "to-device",
                        "drop-count": 0
                    },
                    {
                        "ace-name": "mud-53094-v4to/loc0-todev",
                        "reason": "connection-block",
                        "direction": "from-device",
                        "drop-count": 10
                    },
                    {
                        "reason": "nomatch",
                        "direction": "to-device",
                        "drop-count": 0
                    },
                    {
                        "reason": "nomatch",
                        "direction": "from-device",
                        "drop-count": 0
                    }
                ],
                "match-counts": [
                    {
                        "packet-count": 0,
                        "ace-name": "mud-53094-v4to/loc0-todev"
                    },
                    {
                        "packet-count": 0,
                        "ace-name": "mud-53094-v4fr/loc0-frdev"
                    },
                    {
                        "packet-count": 0,
                        "ace-name": "mud-53094-v4to/loc1-todev"
                    },
                    {
                        "packet-count": 0,
                        "ace-name": "mud-53094-v4fr/loc1-frdev"
                    }
                ],
                "opaque-identifier": [
                    "6f6719b593a7136cfa7826400ab962f1"
                ],
                "enforcement-point-id": "openflow:1",
                "controllers": [
                    {
                        "uri": "urn:ietf:params:mud:dns",
                        "count": 1
                    },
                    {
                        "uri": "urn:ietf:params:mud:ntp",
                        "count": 1
                    }
                ]
            }
        ]
    }
}


<CODE ENDS>
~~~~~~~~~



Privacy Considerations
======================

Using this reporting mechanisms does not reveal internal IP addresses.
Instead, it simply indicates whether a given abstraction is in use,
and how many instances there are.  What is revealed to the
manufacturer is that one or more devices reporting a particular
MUD-URL is located at a particular deployment.  In addition, as of
this draft, reportable events include only administratively dropped
packets, and the times they were dropped.

In order to report the sorts of errors discussed in this memo, a
deployment must determine which packets from a given device
have either been or would be dropped due to an administrative filter
rule.

Security Considerations
=======================

All security considerations of {{RFC8520}} apply equally to this
extension.  In addition, some care should be given to claims that a
device is permitted to be a controller in any given circumstances.
Complete automation requires far more context than is currently
specified here.  Some form of confirmation or selection is required by
an administrator.  This memo simply makes it easier for administrator
to identify candidates for controller selection.


IANA Considerations ===================

The IANA is requested to add "controller-candidate" to the MUD
extensions registry as follows:

~~~~~~~

  Extension Name: reporter
  Standard reference: This document

~~~~~~~

--- back

Changes from Earlier Versions
=============================

Draft -00:

  * Initial revision
